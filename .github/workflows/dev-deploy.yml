name: Build, Test, and Deploy (dev)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: cognito,dynamodb
          DEBUG: ''
    env:
      LOCALSTACK_HOST: localhost
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run user service unit tests
        run: npm run test:unit --workspace user-service
      - name: Run marketplace service tests
        run: npm run test --workspace marketplace-service
      - name: Run user service integration tests
        env:
          COGNITO_ENDPOINT: http://localhost:4566
          DYNAMODB_ENDPOINT: http://localhost:4566
          LOCALSTACK_HOST: localhost
        run: npm run test:integration --workspace user-service

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    steps:
      - uses: actions/checkout@v4
      - name: Validate AWS credentials
        run: |
          if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "::error::AWS credentials are not configured";
            exit 1;
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build services
        run: |
          npm run build --workspace user-service
          npm run package --workspace user-service
          npm run build --workspace marketplace-service
      - name: Build frontend
        run: npm run build --workspace interviewselect-frontend
      - name: Deploy serverless stack
        run: npx serverless deploy --config infrastructure/serverless.yml --stage dev --region $AWS_REGION
